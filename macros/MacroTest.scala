package macros

import scala.reflect.macros.Context
import scala.language.experimental.macros
import scala.annotation.StaticAnnotation
object helloMacro {
  def impl(c: Context)(annottees: c.Expr[Any]*): c.Expr[Any] = {
    import c.universe._
    import Flag._
    val result = {
      annottees.map(_.tree).toList match {
        case q"object $name extends ..$parents { ..$body }" :: Nil =>
          q"""
object $name extends ..$parents {
def hello: ${typeOf[String]} = "\n\n\nHello! I'm generated by a macro.\n\n\n"
..$body
}
"""
      }
    }
    c.Expr[Any](result)
  }
}
class hello extends StaticAnnotation {
  def macroTransform(annottees: Any*) = macro helloMacro.impl
}
