# Login/SignUp
POST   /auth/signin               controllers.security.rest.RestCredentialsAuthController.authenticate
# POST   /auth/signin/:provider     controllers.security.rest.RestSocialAuthController.authenticate(provider)
# POST   /auth/link/:provider       controllers.security.rest.RestSocialAuthController.link(provider)
POST   /auth/signup               controllers.security.rest.RestSignUpController.signUp
GET    /auth/signout              controllers.security.rest.RestSignUpController.signOut

-> /goals controllers.Goals
GET /goals/:uuid/:path controllers.Goals.showMembers(path: String, uuid: String)
POST /goals/:uuid/:path controllers.Goals.connectMember(path: String, uuid: String)
DELETE /goals/:uuid/:path/:otherUuid controllers.Goals.disconnectMember(path: String, uuid: String, otherUuid: String)

-> /problems controllers.Problems
GET /problems/:uuid/:path controllers.Problems.showMembers(path: String, uuid: String)
POST /problems/:uuid/:path controllers.Problems.connectMember(path: String, uuid: String)
DELETE /problems/:uuid/:path/:otherUuid controllers.Problems.disconnectMember(path: String, uuid: String, otherUuid: String)

-> /ideas controllers.Ideas
GET /ideas/:uuid/:path controllers.Ideas.showMembers(path: String, uuid: String)
POST /ideas/:uuid/:path controllers.Ideas.connectMember(path: String, uuid: String)
DELETE /ideas/:uuid/:path/:otherUuid controllers.Ideas.disconnectMember(path: String, uuid: String, otherUuid: String)

GET /graph controllers.Graphs.show

GET /search controllers.Search.index(label: Option[String], title: Option[String])
